{"pages":[{"title":"About Me","text":"这里就当简介吧","link":"/about/index.html"}],"posts":[{"title":"关于这个博客","text":"很久以前，开始学前端的时候，在 CSDN 放了一个博客，更新每天的笔记。当时当然菜也的要不要的，每天更新了一堆抄上去的 css 笔记。那个博客默认的页面、到处充斥的广告简直要了卿命，于是想自己搭一个博客。研究了一阵 WordPress 发现还要搭到服务器上麻烦的不行，于是盯上了 Hexo。 慢慢的，算勉强入了门，也熟悉了 Node，于是找了一个皮肤，整成了现在这个想要的样子，准备整理笔记、逼自己输出内容来锻炼思维本博客皮肤来自于 hexo-theme-icarus 主要做了以下修改： 为了能使更多精力聚焦在内容而不是左右边栏，将主页调整为两栏 文章页调整布局，去掉边栏，宽度全部占满 比较偏爱 Material-Card 设计，去掉了所有内容块的 border-radius 小小修改了 Footer 改了 profile 的 widget 添加置顶功能 主要修改地方： 样式 style.styl 注释掉 54 行 border-radius 123456.card overflow: hidden // border-radius: 4px box-shadow: 0 4px 10px rgba(0,0,0,0.05), 0 0 1px rgba(0,0,0,0.1) &amp; + .card,...... 主页放边栏，文章页去掉 修改 layout / layout.ejs 第 22 行处 12345678&lt;% if(page.path === &quot;index.html&quot;){ %&gt; &lt;div class=&quot;column &lt;%= main_column_class() %&gt; has-order-2 column-main&quot;&gt;&lt;%- body %&gt;&lt;/div&gt; &lt;%- partial(&apos;common/widget&apos;, { position: &apos;left&apos; }) %&gt; &lt;%- partial(&apos;common/widget&apos;, { position: &apos;right&apos; }) %&gt;&lt;%}else{%&gt;&lt;!-- in article page, put arcitle take all width--&gt; &lt;div class=&quot;column is-12 has-order-2 column-main&quot;&gt;&lt;%- body %&gt;&lt;/div&gt;&lt;%}%&gt; 个人信息栏修改 layout / widget / profile.ejs 第 74 行往下 123456789&lt;% if (socialLinks !== null) { %&gt; &lt;% for (let name in socialLinks) { let link = socialLinks[name]; %&gt; &lt;div class=&quot;level is-mobile&quot;&gt; &lt;i class=&quot;&lt;%= link.icon %&gt;&quot;&gt;&lt;/i&gt; &lt;span&gt;&lt;%= link.url %&gt;&lt;/span&gt; &lt;/div&gt; &lt;% } %&gt;&lt;% } %&gt; 具体配置参考 _config.yml 文件，皮肤放在 GayHub 置顶文章 装一个 npm install hexo-generator-index-pin-top --save 先了解一下 front-matter （- -，自己百度一下吧），就是一篇 markdown 最顶上加上一段标记类似这样子： 1234567---title: 关于这个博客date: 2018-12-20 00:00:00......---# 正文内容 明显，用三条短横线做了分隔，这里面添加的一些项目会被 markdown 识别，要置顶文章，在这里面加上 top:true 即可 其他给文章实现分类、多个标签同上，在 front-matter 添加对应的语法，tag 和 目录 如下 ： 1234567891011---title: 关于这个博客date: 2018-12-20 00:00:00tags: - hexo - 随便写写categories: - 前端 - 随便写写--- ToDoList: 添加回复块 页内目录 CI 持续集成 搬一份到 Coding Page, 国内访问解析到 Coding Page 有问题 / 意见，可以微信或者邮件我","link":"/2018/12/20/about-this-blog/"},{"title":"地图组件踩坑","text":"Preview需要在项目中插入地图、寻路功能的，常用有以下地图插件可选择 谷歌地图 百度地图 高德地图 （阿里） 腾讯地图 总的来说，插入地图功能需要以下步骤： 总结需求，技术选型 注册相关账号 申请 API 按官方文档，引入 js，设置容器，插入地图 个性化 经过分析，我的项目（KPCV），需要地图、天气功能，所以选择了 高德地图，它提供了地图功能之外的众多扩展功能，如：3天之内天气预报、定位、交通态势等等。 这里，以 高德地图 为例，从0到1简单记录插入地图功能的入门踩的坑，为大家提供参考。 1 申请 API1.1 注册账号首先搜索 高德地图开放平台，找到 高德开放平台 http://lbs.amap.com/ ，右上角注册一个账号。 1.2 申请相关 API申请完账号，会进入到自己的 控制台 ，我们需要先 创建一个新应用： 从左边菜单打开 应用管理 -&gt; 我的应用 ，点击右上角 创建新应用，设置一个名字，选择一个类型，然后在出现的应用框中找到 右上角 添加新Key，可以看到，在新出来的菜单框中 服务平台 中有多个服务平台可选取： 注意：相关地图库都有 Web端，Android，ios等平台，而在 Web端，一般都会分 Web开发 和 Web服务两种API，这两种 API：Web开发：主要提供围绕 地图 的功能，如：地图显示、标注、路线规划、公交线路等等Web服务：主要提供其他附加功能，如：IP定位、地址解析、坐标系转换、天气、地点搜索等等 显而易见，这个菜单框中的 Web端，Web服务这两种 API 我们都需要，我们先给 Web端 创建一个 key： 选择 Web端，自己输入一个名称，要和后面的 Web服务 区分开，以免自己弄混。然后打上下面 我已阅读 高德地图API服务条款 和 高德服务条款及隐私权政策 勾，提交，就可以看到刚才创建的应用框中多出了一个 Key，且标出了它的名称、绑定服务，绑定服务下面是我们刚才选的 Web端，我们也可以点后面查看配额，因为定位、天气等免费的查询次数每天是有限制的，一般情况下也足够用了。 同样操作，创建一个 Web服务 的key，将两个 key复制保存备用。 2 插入地图2.1 引入 js 文件我们先插入一个基础的地图试试： 在 html 文件中引入 js 文件1&lt;script type=\"text/javascript\" src=\"http://webapi.amap.com/maps?v=1.4.2&amp;key=您申请的key值\"&gt;&lt;/script&gt; 然后用前面复制下来的 Web端 的 key，替换上面链接中 您申请的key值 字符。 js 文件地址及相关说明可以在这里找到：http://lbs.amap.com/api/javascript-api/summary/#version-introduction 2.2 设置一个容器1&lt;div id=\"mapContainer\"&gt;&lt;/div&gt; 根据你的需求，为容器设置合适的宽高 给容器设置 id，下面初始化时候需要 2.3 开动 js，创建地图使用 AMap.Map() 构造函数即可，填进去你的容器id：1var myMap = new AMap.Map('mapContainer'); 召唤出来的地图会自动定位到你当前位置。 若需要指定地图定位点，使用官方的 坐标拾取器 获取你所要显示的地点的坐标，然后在AMap.Map() 构造函数中补充参数即可： 坐标拾取器：http://lbs.amap.com/console/show/picker，搜索 惟真科技 ，获得坐标 120.163261,30.184492，复制，填到 center 数组属性中 ↓ 12345var myMap = new AMap.Map('mapContainer',{ center: [120.163261,30.184492], resizeEnable: true, // 自动重置地图尺寸 zoom:11, // 设置缩放级别}); zoom : 地图缩放级别，最大为 20 ，最小为 1，可以根据自己需求设置试试看。 3 插件系统高德地图在基础的地图图层和覆盖物功能之外提供了众多接口，这里以定位的 AMap.Geolocation 插件 和 天气插件 ‘AMap.Weather’ 为例： 3.1 定位插件http://lbs.amap.com/api/javascript-api/reference/location 官网提供了多种加载方式，这里以异步为例：1234567891011121314151617181920212223242526272829var myMap = new AMap.Map('mapContainer',{ center: [120.163261,30.184492], resizeEnable: true, // 自动重置地图尺寸 zoom:11, // 设置缩放级别});// 接上面myMap.plugin(['AMap.Geolocation', 'AMap.Weather'], function () { var geolocation = new AMap.Geolocation({ enableHighAccuracy: true, //是否使用高精度定位，默认:true timeout: 10000, //超过10秒后停止定位，默认：无穷大 useNative: true, //是否使用安卓定位 sdk 用来进行定位，默认：false zoomToAccuracy: true, //定位成功后调整地图视野范围使定位位置及精度范围视野内可见，默认：false showMarker: true, //定位成功后在定位到的位置显示点标记，默认：true showMarker: true, //定位成功时是否在定位位置显示一个 Marker showCircle: true, //定位成功并且有精度信息时，是否用一个圆圈 circle 表示精度范围 }); myMap.addControl(geolocation); geolocation.getCurrentPosition(); AMap.event.addListener(geolocation, 'complete', function (response) { //定位完成后的回调 console.log(response) console.log(\"您位于：\"+response.addressComponent.province + response.addressComponent.city + response.addressComponent.district + response.addressComponent.township); }); AMap.event.addListener(geolocation, 'error', function (response) { //定位出错后的回调 });}); 定位成功后返回的对象中，addressComponent 里面是详细地址，你可以看看返回的所有数据~ 3.2 天气插件天气插件用到了 Web服务 的 key，因此，你需要先复制过来Web服务 的 key 查询天气的 API地址为： 1http://restapi.amap.com/v3/weather/weatherInfo?参数&amp;key=“您的key” 其中， key 是必须的参数，其他参数为选填，一个例子： 12345678910$.ajax({ method: \"GET\", url: 'http://restapi.amap.com/v3/weather/weatherInfo?city='杭州市'&amp;extensions=all&amp;key=你的key', dataType: \"json\", // crossDomain: true,}).done(function (res) {// 返回的参数中 res.lives为今日天气 res.forecasts[0] 为预报天气}).fail(function (res) { // 定位失败返回的对象}) 返回具体的数据自己可以看看都有哪些，对应数据代表的含义见官方：http://lbs.amap.com/api/webservice/guide/api/weatherinfo 4 其他服务除了插件， javascript控件自身也带了许多服务，可以实现相同功能，如道路交叉口查询服务AMap.RoadInfoSearch、天气查询 AMap.Weather： 12345 AMap.service('AMap.Weather', function() { var weather = new AMap.Weather(); //查询实时天气信息, 查询的城市到行政级别的城市，如朝阳区、杭州市 weather.getLive('杭州市', function(err, data) { }) 文档参见：http://lbs.amap.com/api/javascript-api/reference/search_plugin 实例：http://lbs.amap.com/api/javascript-api/example/weather-forecast/weather-forecast 补充 所有国产地图插件的套路都是一样的：申请账号、申请key、引入文件、创建容器、插入地图，以上仅仅是最简单的从 0 到 1 实现一个地图，及相关服务、插件的最简单介绍，尽量降低第一次上手地图插件的难度，更详细的用法、详尽的功能，请自己多试试，多看看官网文档 官网文档地址 http://lbs.amap.com/api/webservice/gettingstarted 官方所有例子 http://lbs.amap.com/api/javascript-api/example/map/map-show","link":"/2018/12/19/map-plugin/"}],"tags":[{"name":"map","slug":"map","link":"/tags/map/"},{"name":"前端","slug":"前端","link":"/tags/前端/"},{"name":"javascript","slug":"javascript","link":"/tags/javascript/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"随便写写","slug":"随便写写","link":"/tags/随便写写/"}],"categories":[{"name":"前端","slug":"前端","link":"/categories/前端/"},{"name":"随便写写","slug":"前端/随便写写","link":"/categories/前端/随便写写/"}]}